.. _modelsmain:

Models in NEST
==============


What we mean by `models`
------------------------

Models in the context of NEST are C++ implmentations of mathematical equations that describe the characteristics and behavior of
different types of neurons, syanpses, (and devices?), based on the relevant peer-reviewed publications for the model.

We also use the term model in relation to network models (e.g., microcircuit, mesocircuit and multi-area model). These network models
can be considerd a level of complexity higher than the neuron or synapse model that we focus on here. 

Find a model
-----------

NEST provides a ton of models! Textbook standards like integrate-and-fire and Hodgkin-Huxley type models are available
alongside high quality implementations of models published by the neuroscience community.
The models are organized and autogenerated alphabetically by keywords in our directory.

* Discover :doc:`all the models in our directory <index>`.

NESTML
------

* Check out :doc:`NESTML <nestml:index>`, a domain-specific language supporting neuron and synapse models with a code generation backend that generates model code in C++ for NEST.

Why should I check out NESTML?

* Create models without C++
* Fast prototyping



Model naming
------------

Neuron models
~~~~~~~~~~~~~

Neuron model names in NEST combine abbreviations that describe the dynamics and synapse type for that model. 
They may also include author's name of a model based on a specific paper.

Example neuron model name

``iaf_cond_beta`` is an implementation of a spiking neuron using integrate and fire dynamics with
conductance-based synapses. Incoming spike events induce a postsynaptic change
of conductance modelled by a beta function.

Example neuron model name based on specific paper

``hh_cond_exp_traub`` is a modified version of the  Hodgkin Huxley neuron model based on Traub and Miles 

Synapse models
~~~~~~~~~~~~~~

Synapse models  include the word synapse as last word in model name.

Synapse models may begin with author name (e.g., ``clopath_synapsae``) or process (e.g., ``stdp_synase``).

Devices
~~~~~~~

A device name should represent its physical counter point - like a multimeter is ``multimeter``.  In general, the term ``recorder`` is used for devices
that store or generate output. The term  ``generator`` is used for devices that provide input into the simulation.


Table of model terms
~~~~~~~~~~~~~~~~~~~~~

The following table provides the NEST term used for a specific descriptor of a model along with commonly used alternative terms you may find in the literature.
Additional terms may be used to help differentiate models not included in the list.
See the the :doc:`model directory <index>` to access full description of each model.

.. list-table:: Common model terms
   :widths: 50 25 25
   :header-rows: 1

   * - Model description
     - NEST term
     - Alternative terms
   * - Integrate and fire
     - iaf
     - IF 
   * - Adaptive exponential integrate and fire
     - aeif
     - AdEx
   * - Hodgkin Huxley
     - hh
     -
   * - Generalized integrate and fire (Spike response model)
     - gif
     - SRM
   * - Generalized leaky integrate and fire
     - glif
     -
   * -
     - amat / mat
     -
   * - Conductance based
     - cond
     - COBA
   * - Current based
     - psc
     - CUBA
   * - Hill Tononi
     - ht
     -
   * - Point process
     - pp
     -
   * - spike timing dependent plasticity
     - stdp
     -
   * - Compartmental model
     - cm
     -
   * - Multi compartment model
     - mc
     -
   * - alpha function 
     - alpha
     -
   * - beta function
     - beta
     -
   * - gamma function
     - gamma
     -
   * - delta function
     - delta
     -
   * - exponential function
     - exp
     -
   * - precise spike timing 
     - ps
     -
   * - exponential function
     - exp
     -



