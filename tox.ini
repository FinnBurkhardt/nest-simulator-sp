[pytest]
addopts = --doctest-modules --cov --cov-report xml --cov-config=tox.ini --ignore=conda --ignore=env --ignore=.git --ignore=__pycache__ --ignore=plugins/gitolite/
#  --pycodestyle --pydocstyle --pylint --pylint-rcfile=.pylintrc --mypy

[pycodestyle]
count = False
#ignore = E226,E302,E41
exclude = .git/, .snakemake/, .pytest_cache/, conda/, plugins/gitolite/
max-line-length = 120
statistics = True
; show-pep8 = True

# as suggested by pylint docs for joint usage with other tools
# http://pylint.pycqa.org/en/latest/faq.html?highlight=pylintrc#i-am-using-another-popular-linter-alongside-pylint-which-messages-should-i-disable-to-avoid-duplicates

#[pylint]
#options = unneeded-not, line-too-long, unnecessary-semicolon, trailing-whitespace, missing-final-newline, bad-indentation, multiple-statements, bare-except
#ignore = CVS .git conda env __pycache__ .pytest_cache .mypy_cache

[autopep8]
max-line-length = 120

[flake8]
ignore = E226,E302,E41
max-line-length = 120
exclude = conda/* build/* install/*
max-complexity = 10

[pydocstyle]
convention = numpy
add-ignore = D300

[mypy]
exclude = .git/, .snakemake/, .pytest_cache/, sync-test-env/, conda/, env/

#
# Configuraion of test coverage
# For details see
#  <https://coverage.readthedocs.io/en/latest/config.html> and
#  <https://pytest-cov.readthedocs.io/en/latest/config.html>
#
[coverage:run]
branch = True
omit = conda/,plugins/gitolite/parsetab.py
#  src/db/env.py,src/db/versions/*  # define paths to omit

[coverage:report]
show_missing = True
skip_covered = True

[coverage:xml]
output = coverage.xml

